The Tribonacci sequence Tn is defined as follows:

T0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n >= 0.

Given n, return the value of Tn.

Example 1:

Input: n = 4
Output: 4
Explanation:
T_3 = 0 + 1 + 1 = 2
T_4 = 1 + 1 + 2 = 4
Example 2:

Input: n = 25
Output: 1389537


Constraints:

0 <= n <= 37
The answer is guaranteed to fit within a 32-bit integer,
ie. answer <= 2^31 - 1.

------------------------------------------------
            Robin's Brainstorming
------------------------------------------------
Overlapping Subproblems?
    Yes, just like fibonnacci, we need the answers to the last two problems.
    So n = f(n-1) + f(n-2) + f(n-3) & n+1 = f(n-2) + f(n-3) + f(n-4)
    it uses each term twice before being done with them.
    Starting with 0, 1, 1, 2, 4, ...

Base case for a top-down solution?
    n == 0
        Then return 0
    n == 1
        Then return 1
    n == 2
        Then return 1

Recurrence relationship?
    n = tribonacci(n-1) + tribonacci(n-2) + tribonacci(n-3)



